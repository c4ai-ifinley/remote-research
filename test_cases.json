{
  "test_cases": {
    "read_file": [
      {
        "test_name": "basic_functionality",
        "description": "Basic functionality test for read_file",
        "prompt": "Test the read_file tool with basic functionality",
        "tool_schema": {
          "type": "object",
          "properties": {
            "path": {
              "type": "string"
            }
          },
          "required": [
            "path"
          ],
          "additionalProperties": false,
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "generated_arguments": {
          "path": "test_file.txt"
        },
        "expected_indicators": [],
        "timeout_seconds": 30.0,
        "critical": true,
        "success_criteria": {
          "min_response_length": 10,
          "no_error_keywords": [
            "error",
            "failed",
            "exception",
            "invalid"
          ],
          "expects_content": true,
          "acceptable_not_found": true
        },
        "optimization_history": [],
        "auto_generated": true,
        "context_requirements": [
          "path: "
        ]
      },
      {
        "test_name": "parameter_validation",
        "description": "Parameter validation test for read_file",
        "prompt": "Test the read_file tool with parameters: path",
        "tool_schema": {
          "type": "object",
          "properties": {
            "path": {
              "type": "string"
            }
          },
          "required": [
            "path"
          ],
          "additionalProperties": false,
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "generated_arguments": {
          "path": "test_file.txt"
        },
        "expected_indicators": [],
        "timeout_seconds": 30.0,
        "critical": true,
        "success_criteria": {
          "expects_parameters": true,
          "parameter_count": 1,
          "no_parameter_errors": true
        },
        "optimization_history": [],
        "auto_generated": true,
        "context_requirements": [
          "path: "
        ]
      },
      {
        "test_name": "error_handling",
        "description": "Error handling test for read_file",
        "prompt": "Test error handling for read_file tool",
        "tool_schema": {
          "type": "object",
          "properties": {
            "path": {
              "type": "string"
            }
          },
          "required": [
            "path"
          ],
          "additionalProperties": false,
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "generated_arguments": {},
        "expected_indicators": [],
        "timeout_seconds": 30.0,
        "critical": false,
        "success_criteria": {
          "handles_errors_gracefully": true,
          "provides_error_message": true
        },
        "optimization_history": [],
        "auto_generated": true,
        "context_requirements": []
      }
    ],
    "read_multiple_files": [
      {
        "test_name": "basic_functionality",
        "description": "Basic functionality test for read_multiple_files",
        "prompt": "Test the read_multiple_files tool with basic functionality",
        "tool_schema": {
          "type": "object",
          "properties": {
            "paths": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "required": [
            "paths"
          ],
          "additionalProperties": false,
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "generated_arguments": {
          "paths": [
            "test_item"
          ]
        },
        "expected_indicators": [],
        "timeout_seconds": 30.0,
        "critical": true,
        "success_criteria": {
          "min_response_length": 10,
          "no_error_keywords": [
            "error",
            "failed",
            "exception",
            "invalid"
          ],
          "expects_content": true,
          "acceptable_not_found": true
        },
        "optimization_history": [],
        "auto_generated": true,
        "context_requirements": [
          "paths: "
        ]
      },
      {
        "test_name": "parameter_validation",
        "description": "Parameter validation test for read_multiple_files",
        "prompt": "Test the read_multiple_files tool with parameters: paths",
        "tool_schema": {
          "type": "object",
          "properties": {
            "paths": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "required": [
            "paths"
          ],
          "additionalProperties": false,
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "generated_arguments": {
          "paths": [
            "test_item"
          ]
        },
        "expected_indicators": [],
        "timeout_seconds": 30.0,
        "critical": true,
        "success_criteria": {
          "expects_parameters": true,
          "parameter_count": 1,
          "no_parameter_errors": true
        },
        "optimization_history": [],
        "auto_generated": true,
        "context_requirements": [
          "paths: "
        ]
      },
      {
        "test_name": "error_handling",
        "description": "Error handling test for read_multiple_files",
        "prompt": "Test error handling for read_multiple_files tool",
        "tool_schema": {
          "type": "object",
          "properties": {
            "paths": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "required": [
            "paths"
          ],
          "additionalProperties": false,
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "generated_arguments": {},
        "expected_indicators": [],
        "timeout_seconds": 30.0,
        "critical": false,
        "success_criteria": {
          "handles_errors_gracefully": true,
          "provides_error_message": true
        },
        "optimization_history": [],
        "auto_generated": true,
        "context_requirements": []
      }
    ],
    "write_file": [
      {
        "test_name": "basic_functionality",
        "description": "Basic functionality test for write_file",
        "prompt": "Test the write_file tool with basic functionality",
        "tool_schema": {
          "type": "object",
          "properties": {
            "path": {
              "type": "string"
            },
            "content": {
              "type": "string"
            }
          },
          "required": [
            "path",
            "content"
          ],
          "additionalProperties": false,
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "generated_arguments": {
          "path": "test_file.txt",
          "content": "test_value"
        },
        "expected_indicators": [],
        "timeout_seconds": 30.0,
        "critical": true,
        "success_criteria": {
          "min_response_length": 10,
          "no_error_keywords": [
            "error",
            "failed",
            "exception",
            "invalid"
          ]
        },
        "optimization_history": [],
        "auto_generated": true,
        "context_requirements": [
          "path: "
        ]
      },
      {
        "test_name": "parameter_validation",
        "description": "Parameter validation test for write_file",
        "prompt": "Test the write_file tool with parameters: path, content",
        "tool_schema": {
          "type": "object",
          "properties": {
            "path": {
              "type": "string"
            },
            "content": {
              "type": "string"
            }
          },
          "required": [
            "path",
            "content"
          ],
          "additionalProperties": false,
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "generated_arguments": {
          "path": "test_file.txt",
          "content": "test_value"
        },
        "expected_indicators": [],
        "timeout_seconds": 30.0,
        "critical": true,
        "success_criteria": {
          "expects_parameters": true,
          "parameter_count": 2,
          "no_parameter_errors": true
        },
        "optimization_history": [],
        "auto_generated": true,
        "context_requirements": [
          "path: "
        ]
      },
      {
        "test_name": "error_handling",
        "description": "Error handling test for write_file",
        "prompt": "Test error handling for write_file tool",
        "tool_schema": {
          "type": "object",
          "properties": {
            "path": {
              "type": "string"
            },
            "content": {
              "type": "string"
            }
          },
          "required": [
            "path",
            "content"
          ],
          "additionalProperties": false,
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "generated_arguments": {},
        "expected_indicators": [],
        "timeout_seconds": 30.0,
        "critical": false,
        "success_criteria": {
          "handles_errors_gracefully": true,
          "provides_error_message": true
        },
        "optimization_history": [],
        "auto_generated": true,
        "context_requirements": []
      }
    ],
    "edit_file": [
      {
        "test_name": "basic_functionality",
        "description": "Basic functionality test for edit_file",
        "prompt": "Test the edit_file tool with basic functionality",
        "tool_schema": {
          "type": "object",
          "properties": {
            "path": {
              "type": "string"
            },
            "edits": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "oldText": {
                    "type": "string",
                    "description": "Text to search for - must match exactly"
                  },
                  "newText": {
                    "type": "string",
                    "description": "Text to replace with"
                  }
                },
                "required": [
                  "oldText",
                  "newText"
                ],
                "additionalProperties": false
              }
            },
            "dryRun": {
              "type": "boolean",
              "default": false,
              "description": "Preview changes using git-style diff format"
            }
          },
          "required": [
            "path",
            "edits"
          ],
          "additionalProperties": false,
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "generated_arguments": {
          "path": "test_file.txt",
          "edits": [],
          "dryRun": true
        },
        "expected_indicators": [],
        "timeout_seconds": 30.0,
        "critical": true,
        "success_criteria": {
          "min_response_length": 10,
          "no_error_keywords": [
            "error",
            "failed",
            "exception",
            "invalid"
          ]
        },
        "optimization_history": [],
        "auto_generated": true,
        "context_requirements": [
          "path: "
        ]
      },
      {
        "test_name": "parameter_validation",
        "description": "Parameter validation test for edit_file",
        "prompt": "Test the edit_file tool with parameters: path, edits, dryRun",
        "tool_schema": {
          "type": "object",
          "properties": {
            "path": {
              "type": "string"
            },
            "edits": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "oldText": {
                    "type": "string",
                    "description": "Text to search for - must match exactly"
                  },
                  "newText": {
                    "type": "string",
                    "description": "Text to replace with"
                  }
                },
                "required": [
                  "oldText",
                  "newText"
                ],
                "additionalProperties": false
              }
            },
            "dryRun": {
              "type": "boolean",
              "default": false,
              "description": "Preview changes using git-style diff format"
            }
          },
          "required": [
            "path",
            "edits"
          ],
          "additionalProperties": false,
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "generated_arguments": {
          "path": "test_file.txt",
          "edits": [],
          "dryRun": true
        },
        "expected_indicators": [],
        "timeout_seconds": 30.0,
        "critical": true,
        "success_criteria": {
          "expects_parameters": true,
          "parameter_count": 3,
          "no_parameter_errors": true
        },
        "optimization_history": [],
        "auto_generated": true,
        "context_requirements": [
          "path: "
        ]
      },
      {
        "test_name": "error_handling",
        "description": "Error handling test for edit_file",
        "prompt": "Test error handling for edit_file tool",
        "tool_schema": {
          "type": "object",
          "properties": {
            "path": {
              "type": "string"
            },
            "edits": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "oldText": {
                    "type": "string",
                    "description": "Text to search for - must match exactly"
                  },
                  "newText": {
                    "type": "string",
                    "description": "Text to replace with"
                  }
                },
                "required": [
                  "oldText",
                  "newText"
                ],
                "additionalProperties": false
              }
            },
            "dryRun": {
              "type": "boolean",
              "default": false,
              "description": "Preview changes using git-style diff format"
            }
          },
          "required": [
            "path",
            "edits"
          ],
          "additionalProperties": false,
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "generated_arguments": {},
        "expected_indicators": [],
        "timeout_seconds": 30.0,
        "critical": false,
        "success_criteria": {
          "handles_errors_gracefully": true,
          "provides_error_message": true
        },
        "optimization_history": [],
        "auto_generated": true,
        "context_requirements": []
      }
    ],
    "create_directory": [
      {
        "test_name": "basic_functionality",
        "description": "Basic functionality test for create_directory",
        "prompt": "Test the create_directory tool with basic functionality",
        "tool_schema": {
          "type": "object",
          "properties": {
            "path": {
              "type": "string"
            }
          },
          "required": [
            "path"
          ],
          "additionalProperties": false,
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "generated_arguments": {
          "path": "test_file.txt"
        },
        "expected_indicators": [],
        "timeout_seconds": 30.0,
        "critical": true,
        "success_criteria": {
          "min_response_length": 10,
          "no_error_keywords": [
            "error",
            "failed",
            "exception",
            "invalid"
          ],
          "expects_content": true,
          "acceptable_not_found": true
        },
        "optimization_history": [],
        "auto_generated": true,
        "context_requirements": [
          "path: "
        ]
      },
      {
        "test_name": "parameter_validation",
        "description": "Parameter validation test for create_directory",
        "prompt": "Test the create_directory tool with parameters: path",
        "tool_schema": {
          "type": "object",
          "properties": {
            "path": {
              "type": "string"
            }
          },
          "required": [
            "path"
          ],
          "additionalProperties": false,
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "generated_arguments": {
          "path": "test_file.txt"
        },
        "expected_indicators": [],
        "timeout_seconds": 30.0,
        "critical": true,
        "success_criteria": {
          "expects_parameters": true,
          "parameter_count": 1,
          "no_parameter_errors": true
        },
        "optimization_history": [],
        "auto_generated": true,
        "context_requirements": [
          "path: "
        ]
      },
      {
        "test_name": "error_handling",
        "description": "Error handling test for create_directory",
        "prompt": "Test error handling for create_directory tool",
        "tool_schema": {
          "type": "object",
          "properties": {
            "path": {
              "type": "string"
            }
          },
          "required": [
            "path"
          ],
          "additionalProperties": false,
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "generated_arguments": {},
        "expected_indicators": [],
        "timeout_seconds": 30.0,
        "critical": false,
        "success_criteria": {
          "handles_errors_gracefully": true,
          "provides_error_message": true
        },
        "optimization_history": [],
        "auto_generated": true,
        "context_requirements": []
      }
    ],
    "list_directory": [
      {
        "test_name": "basic_functionality",
        "description": "Basic functionality test for list_directory",
        "prompt": "Test the list_directory tool with basic functionality",
        "tool_schema": {
          "type": "object",
          "properties": {
            "path": {
              "type": "string"
            }
          },
          "required": [
            "path"
          ],
          "additionalProperties": false,
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "generated_arguments": {
          "path": "test_file.txt"
        },
        "expected_indicators": [],
        "timeout_seconds": 30.0,
        "critical": true,
        "success_criteria": {
          "min_response_length": 10,
          "no_error_keywords": [
            "error",
            "failed",
            "exception",
            "invalid"
          ],
          "expects_list": true,
          "expects_results": true,
          "acceptable_not_found": true,
          "expects_content": true
        },
        "optimization_history": [],
        "auto_generated": true,
        "context_requirements": [
          "path: "
        ]
      },
      {
        "test_name": "parameter_validation",
        "description": "Parameter validation test for list_directory",
        "prompt": "Test the list_directory tool with parameters: path",
        "tool_schema": {
          "type": "object",
          "properties": {
            "path": {
              "type": "string"
            }
          },
          "required": [
            "path"
          ],
          "additionalProperties": false,
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "generated_arguments": {
          "path": "test_file.txt"
        },
        "expected_indicators": [],
        "timeout_seconds": 30.0,
        "critical": true,
        "success_criteria": {
          "expects_parameters": true,
          "parameter_count": 1,
          "no_parameter_errors": true
        },
        "optimization_history": [],
        "auto_generated": true,
        "context_requirements": [
          "path: "
        ]
      },
      {
        "test_name": "error_handling",
        "description": "Error handling test for list_directory",
        "prompt": "Test error handling for list_directory tool",
        "tool_schema": {
          "type": "object",
          "properties": {
            "path": {
              "type": "string"
            }
          },
          "required": [
            "path"
          ],
          "additionalProperties": false,
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "generated_arguments": {},
        "expected_indicators": [],
        "timeout_seconds": 30.0,
        "critical": false,
        "success_criteria": {
          "handles_errors_gracefully": true,
          "provides_error_message": true
        },
        "optimization_history": [],
        "auto_generated": true,
        "context_requirements": []
      }
    ],
    "directory_tree": [
      {
        "test_name": "basic_functionality",
        "description": "Basic functionality test for directory_tree",
        "prompt": "Test the directory_tree tool with basic functionality",
        "tool_schema": {
          "type": "object",
          "properties": {
            "path": {
              "type": "string"
            }
          },
          "required": [
            "path"
          ],
          "additionalProperties": false,
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "generated_arguments": {
          "path": "test_file.txt"
        },
        "expected_indicators": [],
        "timeout_seconds": 30.0,
        "critical": true,
        "success_criteria": {
          "min_response_length": 10,
          "no_error_keywords": [
            "error",
            "failed",
            "exception",
            "invalid"
          ],
          "expects_json": true,
          "expects_list": true,
          "expects_content": true,
          "acceptable_not_found": true
        },
        "optimization_history": [],
        "auto_generated": true,
        "context_requirements": [
          "path: "
        ]
      },
      {
        "test_name": "parameter_validation",
        "description": "Parameter validation test for directory_tree",
        "prompt": "Test the directory_tree tool with parameters: path",
        "tool_schema": {
          "type": "object",
          "properties": {
            "path": {
              "type": "string"
            }
          },
          "required": [
            "path"
          ],
          "additionalProperties": false,
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "generated_arguments": {
          "path": "test_file.txt"
        },
        "expected_indicators": [],
        "timeout_seconds": 30.0,
        "critical": true,
        "success_criteria": {
          "expects_parameters": true,
          "parameter_count": 1,
          "no_parameter_errors": true
        },
        "optimization_history": [],
        "auto_generated": true,
        "context_requirements": [
          "path: "
        ]
      },
      {
        "test_name": "error_handling",
        "description": "Error handling test for directory_tree",
        "prompt": "Test error handling for directory_tree tool",
        "tool_schema": {
          "type": "object",
          "properties": {
            "path": {
              "type": "string"
            }
          },
          "required": [
            "path"
          ],
          "additionalProperties": false,
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "generated_arguments": {},
        "expected_indicators": [],
        "timeout_seconds": 30.0,
        "critical": false,
        "success_criteria": {
          "handles_errors_gracefully": true,
          "provides_error_message": true
        },
        "optimization_history": [],
        "auto_generated": true,
        "context_requirements": []
      }
    ],
    "move_file": [
      {
        "test_name": "basic_functionality",
        "description": "Basic functionality test for move_file",
        "prompt": "Test the move_file tool with basic functionality",
        "tool_schema": {
          "type": "object",
          "properties": {
            "source": {
              "type": "string"
            },
            "destination": {
              "type": "string"
            }
          },
          "required": [
            "source",
            "destination"
          ],
          "additionalProperties": false,
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "generated_arguments": {
          "source": "test_value",
          "destination": "test_value"
        },
        "expected_indicators": [],
        "timeout_seconds": 30.0,
        "critical": true,
        "success_criteria": {
          "min_response_length": 10,
          "no_error_keywords": [
            "error",
            "failed",
            "exception",
            "invalid"
          ]
        },
        "optimization_history": [],
        "auto_generated": true,
        "context_requirements": []
      },
      {
        "test_name": "parameter_validation",
        "description": "Parameter validation test for move_file",
        "prompt": "Test the move_file tool with parameters: source, destination",
        "tool_schema": {
          "type": "object",
          "properties": {
            "source": {
              "type": "string"
            },
            "destination": {
              "type": "string"
            }
          },
          "required": [
            "source",
            "destination"
          ],
          "additionalProperties": false,
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "generated_arguments": {
          "source": "test_value",
          "destination": "test_value"
        },
        "expected_indicators": [],
        "timeout_seconds": 30.0,
        "critical": true,
        "success_criteria": {
          "expects_parameters": true,
          "parameter_count": 2,
          "no_parameter_errors": true
        },
        "optimization_history": [],
        "auto_generated": true,
        "context_requirements": []
      },
      {
        "test_name": "error_handling",
        "description": "Error handling test for move_file",
        "prompt": "Test error handling for move_file tool",
        "tool_schema": {
          "type": "object",
          "properties": {
            "source": {
              "type": "string"
            },
            "destination": {
              "type": "string"
            }
          },
          "required": [
            "source",
            "destination"
          ],
          "additionalProperties": false,
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "generated_arguments": {},
        "expected_indicators": [],
        "timeout_seconds": 30.0,
        "critical": false,
        "success_criteria": {
          "handles_errors_gracefully": true,
          "provides_error_message": true
        },
        "optimization_history": [],
        "auto_generated": true,
        "context_requirements": []
      }
    ],
    "search_files": [
      {
        "test_name": "basic_functionality",
        "description": "Basic functionality test for search_files",
        "prompt": "Test the search_files tool with basic functionality",
        "tool_schema": {
          "type": "object",
          "properties": {
            "path": {
              "type": "string"
            },
            "pattern": {
              "type": "string"
            },
            "excludePatterns": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "default": []
            }
          },
          "required": [
            "path",
            "pattern"
          ],
          "additionalProperties": false,
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "generated_arguments": {
          "path": "test_file.txt",
          "pattern": "test_value",
          "excludePatterns": [
            "test_item"
          ]
        },
        "expected_indicators": [],
        "timeout_seconds": 30.0,
        "critical": true,
        "success_criteria": {
          "min_response_length": 10,
          "no_error_keywords": [
            "error",
            "failed",
            "exception",
            "invalid"
          ],
          "expects_results": true,
          "acceptable_not_found": true
        },
        "optimization_history": [],
        "auto_generated": true,
        "context_requirements": [
          "path: "
        ]
      },
      {
        "test_name": "parameter_validation",
        "description": "Parameter validation test for search_files",
        "prompt": "Test the search_files tool with parameters: path, pattern, excludePatterns",
        "tool_schema": {
          "type": "object",
          "properties": {
            "path": {
              "type": "string"
            },
            "pattern": {
              "type": "string"
            },
            "excludePatterns": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "default": []
            }
          },
          "required": [
            "path",
            "pattern"
          ],
          "additionalProperties": false,
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "generated_arguments": {
          "path": "test_file.txt",
          "pattern": "test_value",
          "excludePatterns": [
            "test_item"
          ]
        },
        "expected_indicators": [],
        "timeout_seconds": 30.0,
        "critical": true,
        "success_criteria": {
          "expects_parameters": true,
          "parameter_count": 3,
          "no_parameter_errors": true
        },
        "optimization_history": [],
        "auto_generated": true,
        "context_requirements": [
          "path: "
        ]
      },
      {
        "test_name": "error_handling",
        "description": "Error handling test for search_files",
        "prompt": "Test error handling for search_files tool",
        "tool_schema": {
          "type": "object",
          "properties": {
            "path": {
              "type": "string"
            },
            "pattern": {
              "type": "string"
            },
            "excludePatterns": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "default": []
            }
          },
          "required": [
            "path",
            "pattern"
          ],
          "additionalProperties": false,
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "generated_arguments": {},
        "expected_indicators": [],
        "timeout_seconds": 30.0,
        "critical": false,
        "success_criteria": {
          "handles_errors_gracefully": true,
          "provides_error_message": true
        },
        "optimization_history": [],
        "auto_generated": true,
        "context_requirements": []
      }
    ],
    "get_file_info": [
      {
        "test_name": "basic_functionality",
        "description": "Basic functionality test for get_file_info",
        "prompt": "Test the get_file_info tool with basic functionality",
        "tool_schema": {
          "type": "object",
          "properties": {
            "path": {
              "type": "string"
            }
          },
          "required": [
            "path"
          ],
          "additionalProperties": false,
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "generated_arguments": {
          "path": "test_file.txt"
        },
        "expected_indicators": [],
        "timeout_seconds": 30.0,
        "critical": true,
        "success_criteria": {
          "min_response_length": 10,
          "no_error_keywords": [
            "error",
            "failed",
            "exception",
            "invalid"
          ],
          "expects_content": true,
          "acceptable_not_found": true
        },
        "optimization_history": [],
        "auto_generated": true,
        "context_requirements": [
          "path: "
        ]
      },
      {
        "test_name": "parameter_validation",
        "description": "Parameter validation test for get_file_info",
        "prompt": "Test the get_file_info tool with parameters: path",
        "tool_schema": {
          "type": "object",
          "properties": {
            "path": {
              "type": "string"
            }
          },
          "required": [
            "path"
          ],
          "additionalProperties": false,
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "generated_arguments": {
          "path": "test_file.txt"
        },
        "expected_indicators": [],
        "timeout_seconds": 30.0,
        "critical": true,
        "success_criteria": {
          "expects_parameters": true,
          "parameter_count": 1,
          "no_parameter_errors": true
        },
        "optimization_history": [],
        "auto_generated": true,
        "context_requirements": [
          "path: "
        ]
      },
      {
        "test_name": "error_handling",
        "description": "Error handling test for get_file_info",
        "prompt": "Test error handling for get_file_info tool",
        "tool_schema": {
          "type": "object",
          "properties": {
            "path": {
              "type": "string"
            }
          },
          "required": [
            "path"
          ],
          "additionalProperties": false,
          "$schema": "http://json-schema.org/draft-07/schema#"
        },
        "generated_arguments": {},
        "expected_indicators": [],
        "timeout_seconds": 30.0,
        "critical": false,
        "success_criteria": {
          "handles_errors_gracefully": true,
          "provides_error_message": true
        },
        "optimization_history": [],
        "auto_generated": true,
        "context_requirements": []
      }
    ],
    "list_allowed_directories": [
      {
        "test_name": "basic_functionality",
        "description": "Basic functionality test for list_allowed_directories",
        "prompt": "Test the list_allowed_directories tool with basic functionality",
        "tool_schema": {
          "type": "object",
          "properties": {},
          "required": []
        },
        "generated_arguments": {},
        "expected_indicators": [],
        "timeout_seconds": 30.0,
        "critical": true,
        "success_criteria": {
          "min_response_length": 10,
          "no_error_keywords": [
            "error",
            "failed",
            "exception",
            "invalid"
          ],
          "expects_list": true
        },
        "optimization_history": [],
        "auto_generated": true,
        "context_requirements": []
      },
      {
        "test_name": "error_handling",
        "description": "Error handling test for list_allowed_directories",
        "prompt": "Test error handling for list_allowed_directories tool",
        "tool_schema": {
          "type": "object",
          "properties": {},
          "required": []
        },
        "generated_arguments": {},
        "expected_indicators": [],
        "timeout_seconds": 30.0,
        "critical": false,
        "success_criteria": {
          "handles_errors_gracefully": true,
          "provides_error_message": true
        },
        "optimization_history": [],
        "auto_generated": true,
        "context_requirements": []
      }
    ],
    "search_papers": [
      {
        "test_name": "basic_functionality",
        "description": "Basic functionality test for search_papers",
        "prompt": "Test the search_papers tool with basic functionality",
        "tool_schema": {
          "properties": {
            "topic": {
              "title": "Topic",
              "type": "string"
            },
            "max_results": {
              "default": 5,
              "title": "Max Results",
              "type": "integer"
            }
          },
          "required": [
            "topic"
          ],
          "title": "search_papersArguments",
          "type": "object"
        },
        "generated_arguments": {
          "topic": "test query",
          "max_results": 5
        },
        "expected_indicators": [],
        "timeout_seconds": 30.0,
        "critical": true,
        "success_criteria": {
          "min_response_length": 10,
          "no_error_keywords": [
            "error",
            "failed",
            "exception",
            "invalid"
          ],
          "expects_list": true,
          "expects_results": true,
          "acceptable_not_found": true
        },
        "optimization_history": [],
        "auto_generated": true,
        "context_requirements": []
      },
      {
        "test_name": "parameter_validation",
        "description": "Parameter validation test for search_papers",
        "prompt": "Test the search_papers tool with parameters: topic, max_results",
        "tool_schema": {
          "properties": {
            "topic": {
              "title": "Topic",
              "type": "string"
            },
            "max_results": {
              "default": 5,
              "title": "Max Results",
              "type": "integer"
            }
          },
          "required": [
            "topic"
          ],
          "title": "search_papersArguments",
          "type": "object"
        },
        "generated_arguments": {
          "topic": "test query",
          "max_results": 5
        },
        "expected_indicators": [],
        "timeout_seconds": 30.0,
        "critical": true,
        "success_criteria": {
          "expects_parameters": true,
          "parameter_count": 2,
          "no_parameter_errors": true
        },
        "optimization_history": [],
        "auto_generated": true,
        "context_requirements": []
      },
      {
        "test_name": "error_handling",
        "description": "Error handling test for search_papers",
        "prompt": "Test error handling for search_papers tool",
        "tool_schema": {
          "properties": {
            "topic": {
              "title": "Topic",
              "type": "string"
            },
            "max_results": {
              "default": 5,
              "title": "Max Results",
              "type": "integer"
            }
          },
          "required": [
            "topic"
          ],
          "title": "search_papersArguments",
          "type": "object"
        },
        "generated_arguments": {},
        "expected_indicators": [],
        "timeout_seconds": 30.0,
        "critical": false,
        "success_criteria": {
          "handles_errors_gracefully": true,
          "provides_error_message": true
        },
        "optimization_history": [],
        "auto_generated": true,
        "context_requirements": []
      }
    ],
    "extract_info": [
      {
        "test_name": "basic_functionality",
        "description": "Basic functionality test for extract_info",
        "prompt": "Test the extract_info tool with basic functionality",
        "tool_schema": {
          "properties": {
            "paper_id": {
              "title": "Paper Id",
              "type": "string"
            }
          },
          "required": [
            "paper_id"
          ],
          "title": "extract_infoArguments",
          "type": "object"
        },
        "generated_arguments": {
          "paper_id": "test_id_123"
        },
        "expected_indicators": [],
        "timeout_seconds": 30.0,
        "critical": true,
        "success_criteria": {
          "min_response_length": 10,
          "no_error_keywords": [
            "error",
            "failed",
            "exception",
            "invalid"
          ],
          "expects_json": true,
          "expects_results": true,
          "acceptable_not_found": true
        },
        "optimization_history": [],
        "auto_generated": true,
        "context_requirements": [
          "paper_id: "
        ]
      },
      {
        "test_name": "parameter_validation",
        "description": "Parameter validation test for extract_info",
        "prompt": "Test the extract_info tool with parameters: paper_id",
        "tool_schema": {
          "properties": {
            "paper_id": {
              "title": "Paper Id",
              "type": "string"
            }
          },
          "required": [
            "paper_id"
          ],
          "title": "extract_infoArguments",
          "type": "object"
        },
        "generated_arguments": {
          "paper_id": "test_id_123"
        },
        "expected_indicators": [],
        "timeout_seconds": 30.0,
        "critical": true,
        "success_criteria": {
          "expects_parameters": true,
          "parameter_count": 1,
          "no_parameter_errors": true
        },
        "optimization_history": [],
        "auto_generated": true,
        "context_requirements": [
          "paper_id: "
        ]
      },
      {
        "test_name": "error_handling",
        "description": "Error handling test for extract_info",
        "prompt": "Test error handling for extract_info tool",
        "tool_schema": {
          "properties": {
            "paper_id": {
              "title": "Paper Id",
              "type": "string"
            }
          },
          "required": [
            "paper_id"
          ],
          "title": "extract_infoArguments",
          "type": "object"
        },
        "generated_arguments": {},
        "expected_indicators": [],
        "timeout_seconds": 30.0,
        "critical": false,
        "success_criteria": {
          "handles_errors_gracefully": true,
          "provides_error_message": true
        },
        "optimization_history": [],
        "auto_generated": true,
        "context_requirements": []
      }
    ],
    "collect_recent_papers": [
      {
        "test_name": "basic_functionality",
        "description": "Basic functionality test for collect_recent_papers",
        "prompt": "Test the collect_recent_papers tool with basic functionality",
        "tool_schema": {
          "properties": {
            "topic": {
              "title": "Topic",
              "type": "string"
            },
            "max_results": {
              "default": 5,
              "title": "Max Results",
              "type": "integer"
            },
            "min_year": {
              "default": 2024,
              "title": "Min Year",
              "type": "integer"
            }
          },
          "required": [
            "topic"
          ],
          "title": "collect_recent_papersArguments",
          "type": "object"
        },
        "generated_arguments": {
          "topic": "test query",
          "max_results": 5,
          "min_year": 1
        },
        "expected_indicators": [],
        "timeout_seconds": 30.0,
        "critical": true,
        "success_criteria": {
          "min_response_length": 10,
          "no_error_keywords": [
            "error",
            "failed",
            "exception",
            "invalid"
          ]
        },
        "optimization_history": [],
        "auto_generated": true,
        "context_requirements": []
      },
      {
        "test_name": "parameter_validation",
        "description": "Parameter validation test for collect_recent_papers",
        "prompt": "Test the collect_recent_papers tool with parameters: topic, max_results, min_year",
        "tool_schema": {
          "properties": {
            "topic": {
              "title": "Topic",
              "type": "string"
            },
            "max_results": {
              "default": 5,
              "title": "Max Results",
              "type": "integer"
            },
            "min_year": {
              "default": 2024,
              "title": "Min Year",
              "type": "integer"
            }
          },
          "required": [
            "topic"
          ],
          "title": "collect_recent_papersArguments",
          "type": "object"
        },
        "generated_arguments": {
          "topic": "test query",
          "max_results": 5,
          "min_year": 1
        },
        "expected_indicators": [],
        "timeout_seconds": 30.0,
        "critical": true,
        "success_criteria": {
          "expects_parameters": true,
          "parameter_count": 3,
          "no_parameter_errors": true
        },
        "optimization_history": [],
        "auto_generated": true,
        "context_requirements": []
      },
      {
        "test_name": "error_handling",
        "description": "Error handling test for collect_recent_papers",
        "prompt": "Test error handling for collect_recent_papers tool",
        "tool_schema": {
          "properties": {
            "topic": {
              "title": "Topic",
              "type": "string"
            },
            "max_results": {
              "default": 5,
              "title": "Max Results",
              "type": "integer"
            },
            "min_year": {
              "default": 2024,
              "title": "Min Year",
              "type": "integer"
            }
          },
          "required": [
            "topic"
          ],
          "title": "collect_recent_papersArguments",
          "type": "object"
        },
        "generated_arguments": {},
        "expected_indicators": [],
        "timeout_seconds": 30.0,
        "critical": false,
        "success_criteria": {
          "handles_errors_gracefully": true,
          "provides_error_message": true
        },
        "optimization_history": [],
        "auto_generated": true,
        "context_requirements": []
      }
    ],
    "fetch": [
      {
        "test_name": "basic_functionality",
        "description": "Basic functionality test for fetch",
        "prompt": "Test the fetch tool with basic functionality",
        "tool_schema": {
          "description": "Parameters for fetching a URL.",
          "properties": {
            "url": {
              "description": "URL to fetch",
              "format": "uri",
              "minLength": 1,
              "title": "Url",
              "type": "string"
            },
            "max_length": {
              "default": 5000,
              "description": "Maximum number of characters to return.",
              "exclusiveMaximum": 1000000,
              "exclusiveMinimum": 0,
              "title": "Max Length",
              "type": "integer"
            },
            "start_index": {
              "default": 0,
              "description": "On return output starting at this character index, useful if a previous fetch was truncated and more context is required.",
              "minimum": 0,
              "title": "Start Index",
              "type": "integer"
            },
            "raw": {
              "default": false,
              "description": "Get the actual HTML content of the requested page, without simplification.",
              "title": "Raw",
              "type": "boolean"
            }
          },
          "required": [
            "url"
          ],
          "title": "Fetch",
          "type": "object"
        },
        "generated_arguments": {
          "url": "https://example.com/test",
          "max_length": 5,
          "start_index": 1,
          "raw": true
        },
        "expected_indicators": [],
        "timeout_seconds": 30.0,
        "critical": true,
        "success_criteria": {
          "min_response_length": 10,
          "no_error_keywords": [
            "error",
            "failed",
            "exception",
            "invalid"
          ]
        },
        "optimization_history": [],
        "auto_generated": true,
        "context_requirements": [
          "url: URL to fetch"
        ]
      },
      {
        "test_name": "parameter_validation",
        "description": "Parameter validation test for fetch",
        "prompt": "Test the fetch tool with parameters: url, max_length, start_index, raw",
        "tool_schema": {
          "description": "Parameters for fetching a URL.",
          "properties": {
            "url": {
              "description": "URL to fetch",
              "format": "uri",
              "minLength": 1,
              "title": "Url",
              "type": "string"
            },
            "max_length": {
              "default": 5000,
              "description": "Maximum number of characters to return.",
              "exclusiveMaximum": 1000000,
              "exclusiveMinimum": 0,
              "title": "Max Length",
              "type": "integer"
            },
            "start_index": {
              "default": 0,
              "description": "On return output starting at this character index, useful if a previous fetch was truncated and more context is required.",
              "minimum": 0,
              "title": "Start Index",
              "type": "integer"
            },
            "raw": {
              "default": false,
              "description": "Get the actual HTML content of the requested page, without simplification.",
              "title": "Raw",
              "type": "boolean"
            }
          },
          "required": [
            "url"
          ],
          "title": "Fetch",
          "type": "object"
        },
        "generated_arguments": {
          "url": "https://example.com/test",
          "max_length": 5,
          "start_index": 1,
          "raw": true
        },
        "expected_indicators": [],
        "timeout_seconds": 30.0,
        "critical": true,
        "success_criteria": {
          "expects_parameters": true,
          "parameter_count": 4,
          "no_parameter_errors": true
        },
        "optimization_history": [],
        "auto_generated": true,
        "context_requirements": [
          "url: URL to fetch"
        ]
      },
      {
        "test_name": "error_handling",
        "description": "Error handling test for fetch",
        "prompt": "Test error handling for fetch tool",
        "tool_schema": {
          "description": "Parameters for fetching a URL.",
          "properties": {
            "url": {
              "description": "URL to fetch",
              "format": "uri",
              "minLength": 1,
              "title": "Url",
              "type": "string"
            },
            "max_length": {
              "default": 5000,
              "description": "Maximum number of characters to return.",
              "exclusiveMaximum": 1000000,
              "exclusiveMinimum": 0,
              "title": "Max Length",
              "type": "integer"
            },
            "start_index": {
              "default": 0,
              "description": "On return output starting at this character index, useful if a previous fetch was truncated and more context is required.",
              "minimum": 0,
              "title": "Start Index",
              "type": "integer"
            },
            "raw": {
              "default": false,
              "description": "Get the actual HTML content of the requested page, without simplification.",
              "title": "Raw",
              "type": "boolean"
            }
          },
          "required": [
            "url"
          ],
          "title": "Fetch",
          "type": "object"
        },
        "generated_arguments": {},
        "expected_indicators": [],
        "timeout_seconds": 30.0,
        "critical": false,
        "success_criteria": {
          "handles_errors_gracefully": true,
          "provides_error_message": true
        },
        "optimization_history": [],
        "auto_generated": true,
        "context_requirements": []
      }
    ]
  },
  "dspy_config": {
    "optimization_enabled": true
  }
}